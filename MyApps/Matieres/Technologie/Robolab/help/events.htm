<html> <head> <title>events</title> <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> </head><body bgcolor="#FFFFFF"> <p>RCX Events</p> <p><!--startlist--#monitorevent,#stopeventmonitoring,#eventlanding,#setpressedevent,#setreleasedevent,#setlightevent,#setdarkevent,#sethotcevent,#sethotfevent,#setcoolcevent,#setcoolfevent,#setmailevent,#setenterlowevent,#setenternormalevent,#setenterhievent,#resetevent,#forceevent,#setperiodevent,#settransitionevent,#setincreasingrotationevent,#setdecreasingrotationevent,#setcontainergtevent,#setcontainerltevent,#setgenericevent,#setgenericdecreaseevent,#settimergtevent, #defineevent,#clearevents-endlist----></p> <table width="82%" border="1"> <tr> <td width="47%">Icons &amp; Hints</td> <td width="53%">Examples</td> </tr> <tr> <td width="47%"><!--#begin_monitorevent--><!--example=blackjump.vit=example--><!--#begin_picture1--><img src="images/monitoreventc.jpg"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to begin watching for an event. This command must be used in every event program.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--> <img src="images/blackjump.jpg" width="270" height="72"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a red event that is triggered when the touch sensor is pressed. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the touch sensor is pushed in. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_monitorevent--></td> </tr> <tr> <td width="47%"><!--#begin_stopeventmonitoring--><!--example=eventStopMonitorexample.vit=example--><!--#begin_picture1--><img src="images/stopeventmonitoringc.jpg" width="159" height="32"><!--#end_picture1--><!--#begin_text1--> Hints: This command stops the program from watching for events.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventStopMonitorImage.jpg" width="369" height="84"><!--#end_picture2--><!--#begin_text2-->This piece of code sets up a blue event that is triggered when the touch sensor is touched and released. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the touch sensor is pushed in and released. This will force the program out of the jump sequence and make it land where the Event Landing is located. The program then stops monitoring for events because of the Stop Event Monitoring icon. <!--#end_text2--><!--#end_stopeventmonitoring--></td> </tr> <tr> <td width="47%"><!--#begin_eventlanding--><!--example=blackjump.vit=example--><!--#begin_picture1--><img src="images/eventlandingc.jpg" width="159" height="32"><!--#end_picture1--><!--#begin_text1--> Hints: This command marks the place where your program will jump to when an event is triggered. Every event goes to the same land. If you are using more than one event, you will have to use the Event Register Container to determine what event was triggered. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/blackjump.jpg" width="270" height="72"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a red event that is triggered when the touch sensor is pressed. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the touch sensor is pushed in. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_eventlanding--></td> </tr> <tr> <td width="47%"><!--#begin_setpressedevent--><!--example=blackjump.vit=example--><!--#begin_picture1--><img src="images/setpressedeventc.jpg" width="203" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the touch sensor is pressed. The default waits for a touch sensor pressed connected to port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source, source of information, such as sensor values of ports 1, 2, &amp; 3, container values, or mail values. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/blackjump.jpg" width="270" height="72"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a red event that is triggered when the touch sensor is pressed. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the touch sensor is pushed in. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_setpressedevent--></td> </tr> <tr> <td width="47%"><!--#begin_setreleasedevent--><!--example=eventTRexample.vit=example--><!--#begin_picture1--><img src="images/setreleasedeventc.jpg" width="203" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the touch sensor is pressed and released. The default waits for a touch sensor pressed connected to port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source, source of information, such as sensor values of ports 1, 2, &amp; 3, container values, or mail values. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventTRImage.jpg" width="328" height="82"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a blue event that is triggered when the touch sensor is touched and released. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the touch sensor is pushed in and released. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_setreleasedevent--></td> </tr> <tr> <td width="47%" height="175"><!--#begin_setlightevent--><!--example=eventBrighterexample.vit=example--><!--#begin_picture1--><img src="images/setlighteventc.jpg" width="213" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the light sensor goes above the threshold. The threshold can be modified with an event modifier. The default is a red event that waits for a light reading higher than 55 from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values. <!--#end_text1--></td> <td width="53%" height="175"><!--#begin_picture2--><img src="images/eventBrighterImage.jpg" width="327" height="80"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a blue event that is triggered when the light value goes above the threshold. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the light value goes above the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_setlightevent--></td> </tr> <tr> <td width="47%"><!--#begin_setdarkevent--><!--example=eventDarkerexample.vit=example--><!--#begin_picture1--><img src="images/setdarkeventc.jpg" width="213" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the light sensor goes below the threshold. The threshold can be modified with an event modifier. The default is a red event that waits for a light equal to or below 55 from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/EventDarkerImage.jpg" width="328" height="80"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a blue event that is triggered when the light value goes below the threshold. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the light value goes below the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_setdarkevent--></td> </tr> <tr> <td width="47%"><!--#begin_sethotcevent--><!--example=eventTempRiseCexample.vit=example--><!--#begin_picture1--><img src="images/sethotceventc.jpg" width="254" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the temperature sensor goes above the threshold in Celsius. The threshold can be modified with an event modifier. The default is a red event that waits for a temperature reading above 30(C) from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventTempRiseCImage.jpg" width="325" height="82"><!--#end_picture2--><!--#begin_text2-->This piece of code sets up a blue event that is triggered when the temperature value goes above the threshold in Celsius. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the temperature value goes above the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_sethotcevent--></td> </tr> <tr> <td width="47%"><!--#begin_sethotfevent--><!--example=eventTempRiseFexample.vit=example--><!--#begin_picture1--><img src="images/sethotfeventc.jpg" width="254" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the temperature sensor goes above the threshold in Fahrenheit. The threshold can be modified with an event modifier. The default is a red event that waits for a temperature reading above 80(F) from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventTempRiseFImage.jpg" width="328" height="83"><!--#end_picture2--><!--#begin_text2-->This piece of code sets up a blue event that is triggered when the temperature value goes above the threshold in Fahrenheit. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the temperature value goes above the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_sethotfevent--></td> </tr> <tr> <td width="47%"><!--#begin_setcoolcevent--><!--example=eventTempDownCexample.vit=example--><!--#begin_picture1--><img src="images/setcoolceventc.jpg" width="254" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the temperature sensor goes below the threshold in Celsius. The threshold can be modified with an event modifier. The default is a red event that waits for a temperature reading below 30(C) from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventTempDownCImage.jpg" width="329" height="84"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a blue event that is triggered when the temperature value goes below the threshold in Celsius. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the temperature value goes below the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_setcoolcevent--></td> </tr> <tr> <td width="47%"><!--#begin_setcoolfevent--><!--example=eventTempDownFexample.vit=example--><!--#begin_picture1--><img src="images/setcoolfeventc.jpg" width="254" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the temperature sensor goes below the threshold in Fahrenheit. The threshold can be modified with an event modifier. The default is a red event that waits for a temperature reading below 80(F) from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventTempDownFImage.jpg" width="326" height="80"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a blue event that is triggered when the temperature value goes below the threshold in Fahrenheit. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the temperature value goes below the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_setcoolfevent--></td> </tr> <tr> <td width="47%"><!--#begin_setmailevent--><!--example=eventMailexample.vit=example--><!--#begin_picture1--><img src="images/setmaileventc.jpg" width="203" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the mail equals 10. The default is a red event that waits for the mail to equal 10. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventMailImage.jpg" width="327" height="92"><!--#end_picture2--><!--#begin_text2-->This piece of code sets up a red event that is triggered when the mail value being sent to the RCX equals that of the value of the mailbox. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the value of the mailbox equals the mail the RCX is receiving. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_setmailevent--></td> </tr> <tr> <td width="47%"><!--#begin_setenterlowevent--><!--example=eventLowerThreshexample.vit=example--><!--#begin_picture1--><img src="images/setenterloweventc.jpg" width="203" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to be triggered when the value of the Event Source goes below the lower threshold. This command should be followed by the Define Setting Command which is where you define your lower and upper thresholds. Event Sources can come from sensor values from ports 1,2 &amp; 3, container values, mail values, and timer values. If using a sensor value, the sensor should be zeroed prior to setting up the event. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventLowerThreshImage.jpg" width="372" height="91"><!--#end_picture2--><!--#begin_text2--> This piece of code defines the thresholds for the Enter Low Event icon. It then sets up the red Enter Low Event and begins monitoring. The program will play a sound over and over again until the value of the mailbox goes below 5. This event will force the program to the place where the Event Landing icon is located. Make sure you define a lower, upper, or normal threshold event before you set them up.<!--#end_text2--><!--#end_setenterlowevent--></td> </tr> <tr> <td width="47%"><!--#begin_setenternormalevent--><!--example=eventNormalThreshexample.vit=example--><!--#begin_picture1--><img src="images/setenternormaleventc.jpg" width="203" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to be triggered when the value of the Event Source is between the lower and upper threshold. This command should be followed by the Define Setting Command which is where you define your lower and upper thresholds. Event Sources can come from sensor values from ports 1,2 &amp; 3, container values, mail values, and timer values. If using a sensor value, the sensor should be zeroed prior to setting up the event.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventNormalThreshImage.jpg" width="372" height="117"><!--#end_picture2--><!--#begin_text2--> This piece of code defines the thresholds for the Enter Low Event icon. It then sets up the red Enter Low Event and begins monitoring. The program will play a sound over and over again until the value of the mailbox goes above 10 or below 5. This event will force the program to the place where the Event Landing icon is located. Make sure you define a lower, upper, or normal threshold event before you set them up.<!--#end_text2--><!--#end_setenternormalevent--></td> </tr> <tr> <td width="47%"><!--#begin_setenterhievent--><!--example=eventUpperThreshexample.vit=example--><!--#begin_picture1--><img src="images/setenterhieventc.jpg" width="203" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to be triggered when the value of the Event Source is above the upper threshold. This command should be followed by the Define Setting Command which is where you define your lower and upper thresholds. Event Sources can come from sensor values from ports 1,2 &amp; 3, container values, mail values, and timer values. If using a sensor value, the sensor should be zeroed prior to setting up the event.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventUpperThreshImage.jpg"><!--#end_picture2--><!--#begin_text2-->This piece of code defines the thresholds for the Enter Low Event icon. It then sets up the red Enter Low Event and begins monitoring. The program will play a sound over and over again until the value of the mailbox goes above 10. This event will force the program to the place where the Event Landing icon is located. Make sure you define a lower, upper, or normal threshold event before you set them up.<!--#end_text2--><!--#end_setenterhievent--></td> </tr> <tr> <td width="47%"><!--#begin_resetevent--><!--example=eventZeroexample.vit=example--><!--#begin_picture1--><img src="images/reseteventc.jpg" width="203" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command resets monitoring for an event. The default is to reset the red event with the value of port 1. Event Sources can come from sensor values from ports 1,2,3, container values, mail values, and timer values. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventZeroImage.jpg" width="307" height="161"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a red event that is triggered when the touch sensor is pressed. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the touch sensor is pushed in. This will force the program out of the jump sequence and make it land where the Event Landing is located. The program then resets all events and begins monitoring for the red event to happen again. A different sound will keep playing until the touch sensor is pushed again.<!--#end_text2--><!--#end_resetevent--></td> </tr> <tr> <td width="47%"><!--#begin_forceevent--><!--example=eventForceexample.vit=example--><!--#begin_picture1--><img src="images/forceeventc.jpg" width="160" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command forces an event to be triggered. It basically overrides the system in order to make an event occur. String in the yellow, blue, or red event modifier in order to force that particular event. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventForceImage.jpg" width="336" height="83"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a blue event that is triggered when the touch sensor is touched and released. The Monitor Event icon begins monitoring for such an event to occur. In this case, the Force Event icon will &quot;trick&quot; the program into thinking that the event has really happened(even thought the touch sensor was never pressed) and force it out of the jump loop.<!--#end_text2--><!--#end_forceevent--></td> </tr> <tr> <td width="47%"><!--#begin_setperiodevent--><!--example=eventClicksexample.vit=example--><!--#begin_picture1--><img src="images/setperiodeventc.jpg" width="217" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the number of clicks equals the clicks threshold. The default is a red event that waits for 10 clicks on port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source, source of information, such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventClicksImage.jpg" width="326" height="82"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a blue event that is triggered when the number of clicks equals the clicks threshold. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the number of clicks equals the clicks threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located. <!--#end_text2--><!--#end_setperiodevent--></td> </tr> <tr> <td width="47%"><!--#begin_settransitionevent--><!--example=eventTRexample.vit=example--><!--#begin_picture1--><img src="images/settransitioneventc.jpg" width="203" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the number of touch and releases equals the touch and release (TR) threshold. The default is a red event that waits for 10 touch and releases on port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source, source of information, such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventTRImage.jpg" width="327" height="81"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a blue event that is triggered when the number of touch and releases of the touch sensor equals the clicks threshold. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the number of touch and releases of the touch sensor equals the clicks threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_settransitionevent--></td> </tr> <tr> <td width="47%"><!--#begin_setincreasingrotationevent--><!--example=eventRotationUpexample.vit=example--><!--#begin_picture1--><img src="images/setincreasingrotationeventc.jpg" width="232" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the rotation sensor goes above the threshold. The threshold can be modified with an event modifier. The default is a red event that waits for a rotation reading of 16 (rotation sensor is in 16ths of a rotation) from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventRotationUpImage.jpg" width="327" height="83"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a blue event that is triggered when the rotation value goes above the threshold. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the rotation value goes above the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located. <!--#end_text2--><!--#end_setincreasingrotationevent--></td> </tr> <tr> <td width="47%"><!--#begin_setdecreasingrotationevent--><!--example=eventRotationDownexample.vit=example--><!--#begin_picture1--><img src="images/setdecreasingrotationeventc.jpg" width="232" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the rotation sensor goes below the threshold. The threshold can be modified with an event modifier. The default is a red event that waits for a rotation reading equal to or below 16 (rotation sensor is in 16ths of a rotation) from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventRotationDownImage.jpg" width="327" height="87"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a yellow event that is triggered when the rotation value goes below the threshold. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the rotation value goes below the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located. <!--#end_text2--><!--#end_setdecreasingrotationevent--></td> </tr> <tr> <td width="47%"><!--#begin_setcontainergtevent--><!--example=eventContainerRiseexample.vit=example--><!--#begin_picture1--><img src="images/setcontainergteventc.jpg" width="239" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the container goes above the threshold. The threshold can be modified with an event modifier. The default is a red event that waits for a red container value greater than 1 from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventContainerRiseImage.jpg" width="328" height="98"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a generic event that is triggered when the red container value goes above the threshold. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the red container value goes above the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located. <!--#end_text2--><!--#end_setcontainergtevent--></td> </tr> <tr> <td width="47%"><!--#begin_setcontainerltevent--><!--example=eventContainerDropexample.vit=example--><!--#begin_picture1--><img src="images/setcontainerlteventc.jpg" width="239" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the container goes below the threshold. The threshold can be modified with an event modifier. The default is a red event that waits for a red container value equal to or less than 1 from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventContainerDropImage.jpg" width="326" height="95"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a generic event that is triggered when the red container value goes below the threshold. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the red container value goes below the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_setcontainerltevent--></td> </tr> <tr> <td width="47%"><!--#begin_setgenericevent--><!--example=eventGenericUpexample.vit=example--><!--#begin_picture1--><img src="images/setgenericeventc.jpg" width="224" height="66"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the sensor goes above the threshold. The threshold can be modified with an event modifier. The default is a red event that waits for a sensor value greater than 2V from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventGenericUpImage.jpg" width="328" height="84"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a generic event that is triggered when the generic sensor value goes above the threshold. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the generic sensor value goes above the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_setgenericevent--></td> </tr> <tr> <td width="47%"><!--#begin_setgenericdecreaseevent--><!--example=eventGenericDownexample.vit=example--><!--#begin_picture1--><img src="images/setgenericdecreaseeventc.jpg" width="224" height="66"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the sensor goes below the threshold. The threshold can be modified with an event modifier. The default is a red event that waits for a sensor value equal to or less than 2V from port one. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source (source of information), such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventGenericDownImage.jpg" width="329" height="81"><!--#end_picture2--><!--#begin_text2--> This piece of code sets up a red event that is triggered when the generic sensor value goes below the threshold. The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the generic sensor value goes below the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_setgenericdecreaseevent--></td> </tr> <tr> <td width="47%"><!--#begin_settimergtevent--><!--example=eventTimerUpexample.vit=example--><!--#begin_picture1--><img src="images/settimergteventc.jpg" width="214" height="65"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets up an event to occur when the value of the timer goes above the threshold. The default is a red event that waits for a timer value of one second. This command must appear before the Begin Monitoring command in your program. You can string in a yellow, blue, red, or generic modifier to have several events. You can also string in an event source, source of information, such as sensor values of ports 1, 2, &amp; 3, container values, or mail values.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/settimergteventex.jpg" width="384" height="102"><!--#end_picture2--><!--#begin_text2-->This piece of code sets up a red event that is triggered when the value of the red timer goes above the threshold (100 tenths of seconds). The Monitor Event icon begins monitoring for such an event to occur. A sound will be played over and over again until the red timer value goes above the threshold. This will force the program out of the jump sequence and make it land where the Event Landing is located.<!--#end_text2--><!--#end_settimergtevent--></td> </tr> <tr> <td width="47%"><!--#begin_defineevent--><!--example=eventNormalThreshexample.vit=example--><!--#begin_picture1--><img src="images/defineeventc.jpg" width="219" height="78"><!--#end_picture1--><!--#begin_text1--> Hints: This command is used for defining the thresholds for the Enter Low, Normal, and High Events commands. If a certain specification is not being used, it will be ignored. For example, the upper threshold will be ignored if you only set up an Enter Low Event command. You can string in an event modifier to determine what event you are dealing with. Also, you can string in a duration modifier which sets a limit of the length of time a condition must be occurring to count as an event.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventNormalThreshImage.jpg" width="372" height="117"><!--#end_picture2--><!--#begin_text2--> This piece of code defines the thresholds for the Enter Low Event icon. It then sets up the red Enter Low Event and begins monitoring. The program will play a sound over and over again until the value of the mailbox goes above 10 or below 5. This event will force the program to the place where the Event Landing icon is located. Make sure you define a lower, upper, or normal threshold event before you set them up.<!--#end_text2--><!--#end_defineevent--></td> </tr> <tr> <td width="47%" height="68"><!--#begin_clearevents--><!--example=clearalleventsex.vit=example--><!--#begin_picture1--><img src="images/cleareventsc.jpg" width="159" height="32"><!--#end_picture1--><!--#begin_text1--> Hints: This command clears ALL events. Tasks that are actively monitoring or awaiting for events are not alerted to this fact. <!--#end_text1--></td> <td width="53%" height="68"><!--#begin_picture2--><img src="images/clearalleventsex.jpg" width="238" height="62"><!--#end_picture2--><!--#begin_text2--> This piece of code empties the data buffer, zeros the mailbox, and clears all events currently configured on the RCX..<!--#end_text2--><!--#end_clearevents--></td> </tr> </table> <p>&nbsp; </p> </body> </html>