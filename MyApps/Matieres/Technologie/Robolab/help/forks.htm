<html> <head> <title>forks</title> <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> </head><body bgcolor="#FFFFFF"> <p>Forks</p> <h3><!--startlist-#rcxtouchsensorfork,#rcxcelsiusfork,#containerfork,#rcxtimerfork,#rcxlightsensorfork,#rcxfahrenheitfork,#rcxmailboxfork,#rcxrotationsensorfork,#rcxclickcountfork,#rcxtrcountfork,#rcxnumberofpointsfork,#clockfork,#rcxcamerasensorfork,#rcxrandomfork,#rcxforkmerge,#genericsensorforksa,#humiditysensorforksa,#phsensorfork,#pressuresensorforksa,#soundlevelsensorforksa,#tempsensorforksa,#positionsensorforksa,#voltmeterforksa,#rcxcelsiusfork2,#containerfork2,#rcxtimerfork2,#rcxlightsensorfork2,#rcxfahrenheitfork2,#rcxmailboxfork2,#rcxrotationsensorfork2,#rcxclickcountfork2,#rcxtrcountfork2,#rcxnumberofpointsfork2,#clockfork2,#rcxcamerasensor,#rcxeventfork,#rcxfasttimerfork,#rcxfasttimerfork2-endlist--></h3> <table width="79%" border="1"> <tr> <td width="44%">Icons &amp; Hints</td> <td width="56%">Examples</td> </tr> <tr> <td width="44%"><!--#begin_rcxtouchsensorfork--><!--example=rcxtouchsensorfork.vit=example--><!--#begin_picture1--><img src="images/rcxtouchsensorforkc.jpg" height=32 width=228><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on a touch sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxtouchsensorfork.jpg" height=74 width=266><!--#end_picture2--><!--#begin_text2--> This piece of code would turn on motor A. If, after 4 seconds, the touch sensor is pushed, the RCX will play a sound and shut off the motor. Otherwise, the motor will just be turned off (no sound).<!--#end_text2--><!--#end_rcxtouchsensorfork--></td> </tr> <tr> <td height="58" width="44%"><!--#begin_rcxcelsiusfork--><!--example=rcxcelsiusfork.vit=example--><!--#begin_picture1--><img src="images/rcxcelsiusforkc.jpg" height=52 width=225><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on a temperature sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td height="58" width="56%"><!--#begin_picture2--><img src="images/rcxcelsiusfork.jpg" height=67 width=247><!--#end_picture2--><!--#begin_text2--> This piece of code waits one second and reads the temperature. If the temperature is 30 degrees Celsius or less, it will play a sound.<!--#end_text2--><!--#end_rcxcelsiusfork--></td> </tr> <tr> <td width="44%"><!--#begin_containerfork--><!--example=containerfork.vit=example--><!--#begin_picture1--><img src="images/containerforkc.jpg"><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a container. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/containerfork.jpg" height=68 width=240><!--#end_picture2--><!--#begin_text2--> This piece of code fills a container with a random number. If that number is less than the number specified by the compare to control, the RCX plays a sound.<!--#end_text2--><!--#end_containerfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxtimerfork--><!--example=rcxtimerfork.vit=example--><!--#begin_picture1--><img src="images/rcxtimerforkc.jpg" height=51 width=262><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a timer. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxtimerfork.jpg" height=73 width=264><!--#end_picture2--><!--#begin_text2--> This piece of code turns on lamp a for a random amount of time, and then turns it off. If the time is less than 3 seconds, the RCX plays a sound. <!--#end_text2--><!--#end_rcxtimerfork--></td> </tr> <tr> <td height="59" width="44%"><!--#begin_rcxlightsensorfork--><!--example=rcxlightsensorfork.vit=example--><!--#begin_picture1--><img src="images/rcxlightsensorforkc.jpg" height=52 width=211><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on a light sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td height="59" width="56%"><!--#begin_picture2--><img src="images/rcxlightsensorfork.jpg" height=60 width=266><!--#end_picture2--><!--#begin_text2--> This piece of code turns on lamp A for 4 seconds if the light sensor reads a value of below 55 (the default).<!--#end_text2--><!--#end_rcxlightsensorfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxfahrenheitfork--><!--example=rcxfahrenheitfork.vit=example--><!--#begin_picture1--><img src="images/rcxfahrenheitforkc.jpg" height=52 width=252><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on a temperature sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxfahrenheitfork.jpg" height=80 width=266><!--#end_picture2--><!--#begin_text2--> This piece of code turns on motor A for 4 seconds. The direction is determined by the temperature. If it reads above 80 degrees, the motor will go forward. Otherwise, it will go in reverse.<!--#end_text2--><!--#end_rcxfahrenheitfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxmailboxfork--><!--example=rcxmailboxfork.vit=example--><!--#begin_picture1--><img src="images/rcxmailboxforkc.jpg" height=32 width=186><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of the mailbox. A fork merge is required at some point after this icon. Also, an empty mailbox command should be used sometime before this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxmailboxfork.jpg" height=52 width=268><!--#end_picture2--><!--#begin_text2--> This piece of code would empty the mail box. After ten seconds, it checks to see if it has received mail whose value is greater than 1 (the default). If it has, the RCX plays a sound.<!--#end_text2--><!--#end_rcxmailboxfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxrotationsensorfork--><!--example=rcxrotationsensorfork.vit=example--><!--#begin_picture1--><img src="images/rcxrotationsensorforkc.jpg" height=52 width=191><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on a rotation sensor. A fork merge is required at some point after this icon. Also, a zero angle sensor command should be used sometime before this icon. Reminder: rotation sensor reads in sixteenths, so a reading of 16 equals one rotation. Rotation can be either forward or backward.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxrotationsensorfork.jpg" height=52 width=263><!--#end_picture2--><!--#begin_text2--> This program zeros the angle sensor then waits 10 seconds. If at that point the rotation sensor reads greater than 1 rotation (a reading of 16), then the RCX plays a sound.<!--#end_text2--><!--#end_rcxrotationsensorfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxclickcountfork--><!--example=rcxclickcountfork.vit=example--><!--#begin_picture1--><img src="images/rcxclickcountforkc.jpg" height=52 width=196><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the number of clicks on a touch sensor. A fork merge is required at some point after this icon. Also, a zero clicks sensor command should be used sometime before this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxclickcountfork.jpg" height=66 width=277><!--#end_picture2--><!--#begin_text2--> This piece of code turns on motor A for 10 seconds, then shuts it off. If after 10 seconds the touch sensor has been clicked more than 10 times, it plays a sound.<!--#end_text2--><!--#end_rcxclickcountfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxtrcountfork--><!--example=rcxtrcountfork.vit=example--><!--#begin_picture1--><img src="images/rcxtrcountforkc.jpg" height=52 width=191><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the number of touches and releases on a touch sensor. A fork merge is required at some point after this icon. Also, a zero touch and release sensor command should be used sometime before this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxtrcountfork.jpg" height=67 width=277><!--#end_picture2--><!--#begin_text2--> This piece of code turns on motor A for 10 seconds, and then shuts it off. If after 10 seconds the touch sensor has been touched and releases more than 10 times, it plays a sound.<!--#end_text2--><!--#end_rcxtrcountfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxnumberofpointsfork--><!--example=rcxnumberofpointsfork.vit=example--><!--#begin_picture1--><img src="images/rcxnumberofpointsforkc.jpg" height=52 width=264><!--#end_picture1--><!--#begin_text1--> Hints: Use with Investigator commands. Use this fork if you want to take different courses of action based on the number of points gathered. A fork merge is required at some point after this icon. <!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxnumberofpointsfork.jpg" height=71 width=254><!--#end_picture2--><!--#begin_text2--> This piece of code logs light sensor data points for a random time. If after that time there are 5 (the default) or fewer data points, it logs data for 2 more seconds before stopping. If after the random time there are greater than 5 data points, it stops logging points.<!--#end_text2--><!--#end_rcxnumberofpointsfork--></td> </tr> <tr> <td width="44%"><!--#begin_clockfork--><!--example=clockfork.vit=example--><!--#begin_picture1--><img src="images/clockforkc.jpg" height=52 width=213><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of the RCX clock. A fork merge is required at some point after this icon. <!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/clockfork.jpg" height=49 width=254><!--#end_picture2--><!--#begin_text2--> This piece of code would check the value of the RCX clock. If the clock read 1 minute (the default) or less, then motor A would turn on for 8 seconds.<!--#end_text2--><!--#end_clockfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxcamerasensorfork--><!--example=rcxcamerasensorfork.vit=example--><!--#begin_picture1--><img src="images/rcxcamerasensorforkc.jpg" height=52 width=225><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of the camera sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxcamerasensorfork.jpg" height=81 width=266><!--#end_picture2--><!--#begin_text2--> This piece of code would turn on motor A for 4 seconds, then turn it off. The direction of the motor is determined by the value of the camera sensor. If the camera value is over 55 (the default), the motor goes forward. Otherwise, the motor goes in the reverse direction.<!--#end_text2--><!--#end_rcxcamerasensorfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxrandomfork--><!--example=rcxrandomfork.vit=example--><!--#begin_picture1--><img src="images/rcxrandomforkc.jpg" height=32 width=172><!--#end_picture1--><!--#begin_text1--> Hints: Use this if you want different courses of action to be decided on randomly. A fork merge is required at some point following this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxrandomfork.jpg" height=81 width=266><!--#end_picture2--><!--#begin_text2--> This piece of code would turn on motor A for 4 seconds. The direction would be decided on randomly.<!--#end_text2--><!--#end_rcxrandomfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxforkmerge--><!--example=rcxrandomfork.vit=example--><!--#begin_picture1--><img src="images/rcxforkmergec.jpg" height=32 width=159><!--#end_picture1--><!--#begin_text1--> Hints: ALWAYS needed at the end of a fork. <!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxrandomfork.jpg" height=81 width=266><!--#end_picture2--><!--#begin_text2--> This piece of code would turn on motor A for 4 seconds. The direction would be decided on randomly. <!--#end_text2--><!--#end_rcxforkmerge--></td> </tr> <tr> <td height="59" width="44%"><!--#begin_genericsensorforksa--><!--example=genericsensorforksa.vit=example--><!--#begin_picture1--><img src="images/genericsensorforksac.jpg" height=51 width=201><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a generic sensor adapter. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td height="59" width="56%"><!--#begin_picture2--><img src="images/genericsensorforksa.jpg" height=52 width=204><!--#end_picture2--><!--#begin_text2--> This piece of code would play a sound if the value of the generic sensor adapter was less than or equal to 2 volts (the default).<!--#end_text2--><!--#end_genericsensorforksa--></td> </tr> <tr> <td width="44%"><!--#begin_humiditysensorforksa--><!--example=humiditysensorforksa.vit=example--><!--#begin_picture1--><img src="images/humiditysensorforksac.jpg" height=52 width=228><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a humidity sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/humiditysensorforksa.jpg" height=52 width=204><!--#end_picture2--><!--#begin_text2--> This piece of code would play a sound if the value of the humidity sensor was less than or equal to 50% (the default).<!--#end_text2--><!--#end_humiditysensorforksa--></td> </tr> <tr> <td width="44%"><!--#begin_phsensorfork--><!--example=phsensorfork.vit=example--><!--#begin_picture1--><img src="images/phsensorforkc.jpg" height=52 width=217><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a pH sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/phsensorfork.jpg" height=52 width=204><!--#end_picture2--><!--#begin_text2--> This piece of code would play a sound if the value of the pH sensor was less than or equal to 7 (the default).<!--#end_text2--><!--#end_phsensorfork--></td> </tr> <tr> <td width="44%"><!--#begin_pressuresensorforksa--><!--example=pressuresensorforksa.vit=example--><!--#begin_picture1--><img src="images/pressuresensorforksac.jpg" height=52 width=220><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a pressure sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/pressuresensorforksa.jpg" height=52 width=204><!--#end_picture2--><!--#begin_text2--> This piece of code would play a sound if the value of the pressure sensor was less than or equal to 100 kPa (the default).<!--#end_text2--><!--#end_pressuresensorforksa--></td> </tr> <tr> <td width="44%"><!--#begin_soundlevelsensorforksa--><!--example=soundlevelsensorforksa.vit=example--><!--#begin_picture1--><img src="images/soundlevelsensorforksac.jpg" height=52 width=217><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a sound level sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/soundlevelsensorforksa.jpg" height=52 width=204><!--#end_picture2--><!--#begin_text2--> This piece of code would play a sound if the value of the sound level sensor was less than or equal to 60 dB (the default).<!--#end_text2--><!--#end_soundlevelsensorforksa--></td> </tr> <tr> <td width="44%"><!--#begin_tempsensorforksa--><!--example=tempsensorforksa.vit=example--><!--#begin_picture1--><img src="images/tempsensorforksac.jpg" height=52 width=234><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a temperature sensor. These temperatures are in CELSIUS. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/tempsensorforksa.jpg" height=52 width=204><!--#end_picture2--><!--#begin_text2--> This piece of code would play a sound if the value of the temperature sensor was less than or equal to 30 degrees Celsius (the default).<!--#end_text2--><!--#end_tempsensorforksa--></td> </tr> <tr> <td width="44%"><!--#begin_positionsensorforksa--><!--example=positionsensorforksa.vit=example--><!--#begin_picture1--><img src="images/positionsensorforksac.jpg" height=52 width=237><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a position sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/positionsensorforksa.jpg" height=52 width=204><!--#end_picture2--><!--#begin_text2--> This piece of code would play a sound if the value of the position sensor was less than or equal to 180 degrees (the default). <!--#end_text2--><!--#end_positionsensorforksa--></td> </tr> <tr> <td width="44%"><!--#begin_voltmeterforksa--><!--example=voltmeterforksa.vit=example--><!--#begin_picture1--><img src="images/voltmeterforksac.jpg" height=52 width=204><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a voltage sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/voltmeterforksa.jpg" height=52 width=204><!--#end_picture2--><!--#begin_text2--> This piece of code would play a sound if the value of the voltage sensor was less than or equal to 2 volts (the default). <!--#end_text2--><!--#end_voltmeterforksa--></td> </tr> <tr> <td width="44%"><!--#begin_rcxcelsiusfork2--><!--example=rcxcelsiusfork2.vit=example--><!--#begin_picture1--><img src="images/rcxcelsiusfork2c.jpg" height=52 width=230><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on a temperature sensor. A fork merge is required at some point after this icon. <!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxcelsiusfork2.jpg" height=67 width=247><!--#end_picture2--><!--#begin_text2--> This piece of code waits one second and reads the temperature. If the temperature is not 30 degrees Celsius (the default), it will play a sound.<!--#end_text2--><!--#end_rcxcelsiusfork2--></td> </tr> <tr> <td width="44%"><!--#begin_containerfork2--><!--example=containerfork2.vit=example--><!--#begin_picture1--><img src="images/containerfork2c.jpg" height=52 width=229><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a container. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/containerfork2.jpg" height=67 width=247><!--#end_picture2--><!--#begin_text2--> This piece of code fills a container with a random number. If that number is not equal to 1 (the default), the RCX plays a sound.<!--#end_text2--><!--#end_containerfork2--></td> </tr> <tr> <td width="44%"><!--#begin_rcxtimerfork2--><!--example=rcxtimerfork2.vit=example--><!--#begin_picture1--><img src="images/rcxtimerfork2c.jpg" height=52 width=263><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of a timer. A fork merge is required at some point after this icon. Reminder: Comparison value is measured in tenths of seconds.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxtimerfork2.jpg" height=70 width=277><!--#end_picture2--><!--#begin_text2--> This piece of code turns on lamp a for a random amount of time, and then turns it off. If the time is not equal to 5 seconds (the default), the RCX plays a sound. <!--#end_text2--><!--#end_rcxtimerfork2--></td> </tr> <tr> <td width="44%"><!--#begin_rcxlightsensorfork2--><!--example=rcxlightsensorfork2.vit=example--><!--#begin_picture1--><img src="images/rcxlightsensorfork2c.jpg" height=52 width=209><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on a light sensor. A fork merge is required at some point after this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxlightsensorfork2.jpg" height=69 width=248><!--#end_picture2--><!--#begin_text2--> This piece of code turns on motor A. If the light sensor does not read a value of 55, then the RCX plays a sound. After 2 seconds, the motor is shut off.<!--#end_text2--><!--#end_rcxlightsensorfork2--></td> </tr> <tr> <td height="59" width="44%"><!--#begin_rcxfahrenheitfork2--><!--example=rcxfahrenheitfork2.vit=example--><!--#begin_picture1--><img src="images/rcxfahrenheitfork2c.jpg" height=52 width=251><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on a temperature sensor. A fork merge is required at some point after this icon. <!--#end_text1--></td> <td height="59" width="56%"><!--#begin_picture2--><img src="images/rcxfahrenheitfork2.jpg" height=67 width=247><!--#end_picture2--><!--#begin_text2--> This piece of code waits one second and reads the temperature. If the temperature is not 80 degrees Fahrenheit (the default), it will play a sound.<!--#end_text2--><!--#end_rcxfahrenheitfork2--></td> </tr> <tr> <td width="44%"><!--#begin_rcxmailboxfork2--><!--example=rcxmailboxfork2.vit=example--><!--#begin_picture1--><img src="images/rcxmailboxfork2c.jpg" height=32 width=263><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of the mailbox. A fork merge is required at some point after this icon. Also, an empty mailbox command should be used sometime before this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxmailboxfork2.jpg" height=52 width=268><!--#end_picture2--><!--#begin_text2--> This piece of code empties the mailbox and then waits 10 seconds. If after those 10 seconds the mailbox has a value of 1 (the default), the RCX plays a sound. <!--#end_text2--><!--#end_rcxmailboxfork2--></td> </tr> <tr> <td width="44%"><!--#begin_rcxrotationsensorfork2--><!--example=rcxrotationsensorfork2.vit=example--><!--#begin_picture1--><img src="images/rcxrotationsensorfork2c.jpg" height=52 width=187><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on a rotation sensor. A fork merge is required at some point after this icon. Also, a zero angle sensor command should be used sometime before this icon. Reminder: rotation sensor reads in sixteenths, so a reading of 16 equals one rotation. Rotation can be either forward or backward.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxrotationsensorfork2.jpg" height=51 width=272><!--#end_picture2--><!--#begin_text2--> This piece of code zeros the angle sensor. If after 10 seconds the angle sensor reads 16 (one rotation, the default), then the RCX plays a sound.<!--#end_text2--><!--#end_rcxrotationsensorfork2--></td> </tr> <tr> <td height="58" width="44%"><!--#begin_rcxclickcountfork2--><!--example=rcxclickcountfork2.vit=example--><!--#begin_picture1--><img src="images/rcxclickcountfork2c.jpg" height=52 width=186><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the number of clicks on a touch sensor. A fork merge is required at some point after this icon. Also, a zero clicks sensor command should be used sometime before this icon.<!--#end_text1--></td> <td height="58" width="56%"><!--#begin_picture2--><img src="images/rcxclickcountfork2.jpg" height=51 width=272><!--#end_picture2--><!--#begin_text2--> This piece of code zeros the click sensor. If after 10 seconds the click sensor reads 10 (the default), the RCX plays a sound.<!--#end_text2--><!--#end_rcxclickcountfork2--></td> </tr> <tr> <td width="44%"><!--#begin_rcxtrcountfork2--><!--example=rcxtrcountfork2.vit=example--><!--#begin_picture1--><img src="images/rcxtrcountfork2c.jpg" height=52 width=190><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the number of touches and releases on a touch sensor. A fork merge is required at some point after this icon. Also, a zero touch and release sensor command should be used sometime before this icon.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxtrcountfork2.jpg" height=51 width=272><!--#end_picture2--><!--#begin_text2--> This piece of code zeros the touch and release sensor. If after 10 seconds the touch and release sensor reads 10 (the default), the RCX plays a sound.<!--#end_text2--><!--#end_rcxtrcountfork2--></td> </tr> <tr> <td width="44%"><!--#begin_rcxnumberofpointsfork2--><!--example=rcxnumberofpointsfork2.vit=example--><!--#begin_picture1--><img src="images/rcxnumberofpointsfork2c.jpg" height=52 width=262><!--#end_picture1--><!--#begin_text1--> Hints: Use with Investigator commands. Use this fork if you want to take different courses of action based on the number of points gathered. A fork merge is required at some point after this icon. <!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxnumberofpointsfork2.jpg" height=70 width=260><!--#end_picture2--><!--#begin_text2--> This piece of code logs light sensor data points for 6 seconds. If after that time there are not 5 (the default) data points, the RCX plays a sound before stopping. If after the 6 seconds there are 5 data points, it stops logging points (no sound).<!--#end_text2--><!--#end_rcxnumberofpointsfork2--></td> </tr> <tr> <td width="44%"><!--#begin_clockfork2--><!--example=clockfork2.vit=example--><!--#begin_picture1--><img src="images/clockfork2c.jpg" height=52 width=215><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of the RCX clock. A fork merge is required at some point after this icon. <!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/clockfork2.jpg" height=49 width=266><!--#end_picture2--><!--#begin_text2--> This piece of code would check the value of the RCX clock. If the clock did not read 1 minute (the default), then motor A would turn on for 8 seconds. <!--#end_text2--><!--#end_clockfork2--></td> </tr> <tr> <td width="44%"><!--#begin_rcxcamerasensor--><!--example=rcxcamerasensor.vit=example--><!--#begin_picture1--><img src="images/rcxcamerasensorc.jpg" height=52 width=228><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork if you want to take different courses of action based on the value of the camera sensor. A fork merge is required at some point after this icon. <!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxcamerasensor.jpg" height=81 width=266><!--#end_picture2--><!--#begin_text2--> This piece of code would turn on motor A for 4 seconds, then turn it off. The direction of the motor is determined by the value of the camera sensor. If the camera value is 55 (the default), the motor goes forward. Otherwise, the motor goes in the reverse direction.<!--#end_text2-->&nbsp;<!--#end_rcxcamerasensor--></td> </tr> <tr> <td width="44%"><!--#begin_rcxeventfork--><!--example=rcxeventforkex.vit=example--><!--#begin_picture1--><img src="images/rcxeventforkc.jpg" width="206" height="32"><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork to take different actions based on whether an event has occured or not. Useful if you are monitoring for multiple events and wish to take different actions for different events.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxeventforkex.jpg" width="301" height="110"><!--#end_picture2--><!--#begin_text2--> This piece of code (part of a larger program) would play a D note if the red event had occured. If the red event had not occured it would play an E note.<!--#end_text2-->&nbsp;<!--#end_rcxeventfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxfasttimerfork--><!--example=rcxfasttimerfork.vit=example--><!--#begin_picture1--><img src="images/rcxfasttimerforkc.jpg" width="430" height="50"><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork to take different actions based on whether the Timer (reading in hundredths of a second) is greather than or less than or equal to to an amount of timet.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxfasttimerforkex.jpg" width="333" height="109"><!--#end_picture2--><!--#begin_text2--> This piece of code will beep for 600 hundredths of a second (6 seconds) and then jump to the blue land..<!--#end_text2-->&nbsp;<!--#end_rcxfasttimerfork--></td> </tr> <tr> <td width="44%"><!--#begin_rcxfasttimerfork2--><!--example=rcxfasttimerfork2.vit=example--><!--#begin_picture1--><img src="images/rcxfasttimerfork2c.jpg" width="433" height="50"><!--#end_picture1--><!--#begin_text1--> Hints: Use this fork to take different actions based on whether the Timer (reading in hundredths of a second) is equal to an amount of time or not.<!--#end_text1--></td> <td width="56%"><!--#begin_picture2--><img src="images/rcxfasttimerfork2.jpg" width="356" height="117"><!--#end_picture2--><!--#begin_text2--> This piece of code (part of a larger program) will add 1 to the container while the timer (reading in hundredths of seconds) is not equal to 600. The value of the conatiner is shown on the display.<!--#end_text2-->&nbsp;<!--#end_rcxfasttimerfork2--></td> </tr> </table> </body> </html>