<html> <head> <title>Containers</title> <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> </head><body bgcolor="#FFFFFF"> <p>Containers</p> <p><!--startlist-#fillcontainer,#abscontainer,#andcontainer,#orcontainer,#sgncontainer,#addtocontainer,#removefromcontainer,#multiplytocontainer,#dividecontainer,#switchstatuscontainer,#lightcontainer,#tempccontainer,#tempfcontainer,#rotationcontainer,#mailcontainer,#timervaluecontainer,#randomfillcontainer,#clickscontainer,#trcontainer,#pointscontainer,#clockcontainer,#formula,#successfuleventcontainer,#eventstatecontainer,#fillcamerasensorcontainer,#genericcontainer,#humiditycontainersa,#phcontainersa,#pressurecontainersa,#soundlevelcontainersa,#temperaturecontainersa,#positioncontainersa,#voltmetercontainer,#accelerometercontainer,#luxcontainer,#barometercontainer,#redoxcontainer,#fasttimervaluecontainer-endlist--></p> <table width="79%" border="1"> <tr> <td width="47%">Icons &amp; Hints</td> <td width="53%">Examples</td> </tr> <tr> <td width="47%"><!--#begin_fillcontainer--><!--example=containerFillex.vit=example--><!--#begin_picture1--><img src="images/fillcontainerc.jpg" width="239" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with a value of your choice which can be controlled by a modifier. The default is to set the Red Container to a value of 1.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerFill.jpg" width="287" height="85"><!--#end_picture2--><!--#begin_text2--> This piece of code first zeroes the container, then fills the Red Container with a value of 2. A sound is played, and then the motor is run at the speed of the Red Container, which is 2.<!--#end_text2--><!--#end_fillcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_abscontainer--><!--example=containerABSex.vit=example--><!--#begin_picture1--><img src="images/abscontainerc.jpg" width="296" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the absolute value of a number. The default is to put the absolute value of zero into the Red Container.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerABSex.jpg" width="153" height="93"><!--#end_picture2--><!--#begin_text2--> This piece of code takes absolute value of whatever is put into the container. In this case, the absolute value of -2 is put into the Blue Container, and the RCX will display 2.<!--#end_text2--><!--#end_abscontainer--></td> </tr> <tr> <td width="47%"><!--#begin_andcontainer--><!--example=containerANDex.vit=example--><!--#begin_picture1--><img src="images/andcontainerc.jpg" width="213" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command ANDs a bitwise value to the bitwise value of the container. This is NOT a Boolean operation.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--> <p><img src="images/containerANDex.jpg" width="204" height="85"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with a value of 5. It then ANDs that number with 1. The resulting number after the bitwise operation is 1.<br> 5 = 0101<br> <u>1 = 0001</u><br> 1 = 0001<!--#end_text2--><!--#end_andcontainer--></p> </td> </tr> <tr> <td width="47%"><!--#begin_orcontainer--><!--example=containerORex.vit=example--><!--#begin_picture1--><img src="images/orcontainerc.jpg" width="205" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command ORs a bitwise value to the bitwise value of the container. This is NOT a Boolean operation.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerORex.jpg" width="197" height="86"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with a value of 5. It then ORs that number with 1. The resulting number after the bitwise operation is 5.<br> 5 = 0101<br> <u>1 = 0001</u><br> 5 = 0101 <!--#end_text2--><!--#end_orcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_sgncontainer--><!--example=containerSIGNex.vit=example--><!--#begin_picture1--><img src="images/sgncontainerc.jpg" width="251" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to put the sign (positive or negative) into a container. The default is to put a zero in the Red Container. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerSIGNex.jpg" width="158" height="88"><!--#end_picture2--><!--#begin_text2--> This piece of code takes the sign of the number you put into the container. In this case, -1 is put into the Blue Container. The RCX will then display -1. If the number was 2, then 1 would be put into the container.<!--#end_text2--><!--#end_sgncontainer--></td> </tr> <tr> <td width="47%" height="175"><!--#begin_addtocontainer--><!--example=containerADDex.vit=example--><!--#begin_picture1--><img src="images/addtocontainerc.jpg" width="209" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to add a value to the current value of the container. The default is to add one to the Red Container.<!--#end_text1--></td> <td width="53%" height="175"><!--#begin_picture2--><img src="images/containerADDex.jpg" width="189" height="88"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Blue Container with a value of 1. It then ADDs 2 to the Blue Container. The value of the Blue Container would then be displayed on the RCX as 3.<!--#end_text2--><!--#end_addtocontainer--></td> </tr> <tr> <td width="47%"><!--#begin_removefromcontainer--><!--example=containerSUBTRACTex.vit=example--><!--#begin_picture1--><img src="images/removefromcontainerc.jpg" width="233" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to subtract a value from the current value of the container. The default is to subtract one from the Red Container. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerSUBTRACTex.jpg" width="189" height="85"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Blue Container with a value of 1. It then SUBTRACTs 2 from the Blue Container. The value of the Blue Container would then be displayed on the RCX as -1.<!--#end_text2--><!--#end_removefromcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_multiplytocontainer--><!--example=containerMULTIPLYex.vit=example--><!--#begin_picture1--><img src="images/multiplytocontainerc.jpg" width="230" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to multiply the value of a container by a certain number. The default is to multiply the Red Container by two.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerMULTIPLYex.jpg" width="196" height="90"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Blue Container with a value of 1. It then MULTIPLYs 2 by the value of the Blue Container. The value of the Blue Container would then be displayed on the RCX as 2.<!--#end_text2--><!--#end_multiplytocontainer--></td> </tr> <tr> <td width="47%"><!--#begin_dividecontainer--><!--example=containerDIVIDEex.vit=example--><!--#begin_picture1--><img src="images/dividecontainerc.jpg" width="222" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to divide the value of a container by a certain number. The default is to divide the Red Container by two. User can only use integers (1,2,3....). Non-integer numbers will be rounded to the nearest integer. The result also can only be an integer. Non-integer results will be truncated (the decimal part of the number will be removed).<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerDIVIDEex.jpg" width="192" height="94"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Blue Container with a value of 1. It then divides the value of the Blue Container by 2. The value of the Blue Container would then be displayed on the RCX as 0 (0.5 truncated = 0).<!--#end_text2--><!--#end_dividecontainer--></td> </tr> <tr> <td width="47%"><!--#begin_switchstatuscontainer--><!--example=containerTouchFillex.vit=example--><!--#begin_picture1--><img src="images/switchstatuscontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the touch sensor. This value will either be a zero or a one. The default is to set the Red Container to the value of the touch sensor on port 1. In your program, be sure to specify what port your touch sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerTouchFill.jpg" width="218" height="83"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the touch sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the touch sensor was 1 (meaning it was pressed in), the RCX would read 1.<!--#end_text2--><!--#end_switchstatuscontainer--></td> </tr> <tr> <td width="47%"><!--#begin_lightcontainer--><!--example=containerLightFillex.vit=example--><!--#begin_picture1--><img src="images/lightcontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the light sensor. The default is to set the Red Container to the value of the light sensor on port 1. In your program, be sure to specify what port your light sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerLightFill.jpg" width="220" height="81"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Yellow Container with the value of the light sensor. A sound is played and the value of the Yellow Container is shown on the RCX. If the value of the light sensor was 41, the RCX would read 41.<!--#end_text2--><!--#end_lightcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_tempccontainer--><!--example=containerTempCFillex.vit=example--><!--#begin_picture1--><img src="images/tempccontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the temperature (Celsius) sensor. The default is to set the Red Container to the value of the temperature sensor on port 1. In your program, be sure to specify what port your temperature sensor is connected to with a modifier. Rounds value to nearest integer value (20.7 goes to 21).<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerTempCFill.jpg" width="220" height="81"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the temperature sensor in Celsius. A sound is played and the value of the Red Container is shown on the RCX. If the value of the sensor was 25 deg, the RCX would read 25.<!--#end_text2--><!--#end_tempccontainer--></td> </tr> <tr> <td width="47%"><!--#begin_tempfcontainer--><!--example=containerTempFFillex.vit=example--><!--#begin_picture1--><img src="images/tempfcontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the temperature (Fahrenheit) sensor. The default is to set the Red Container to the value of the temperature sensor on port 1. In your program, be sure to specify what port your temperature sensor is connected to with a modifier. Rounds value to nearest integer value (70.7 goes to 71). <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerTempFFill.jpg" width="220" height="87"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Generic Container with the value of the temperature sensor in Fahrenheit. A sound is played and the value of the Generic Container is shown on the RCX. If the value of the sensor was 75 deg, the RCX would read 75.<!--#end_text2--><!--#end_tempfcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_rotationcontainer--><!--example=containerRotationFillex.vit=example--><!--#begin_picture1--><img src="images/rotationcontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the rotation sensor. The default is to set the Red Container to the value of the rotation sensor on port 1. In your program, be sure to specify what port your rotation sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerRotationFill.jpg" width="219" height="84"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the Rotation sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the sensor was 8, the RCX would read 8.<!--#end_text2--><!--#end_rotationcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_mailcontainer--><!--example=containerMailFillex.vit=example--><!--#begin_picture1--><img src="images/mailcontainerc.jpg" width="181" height="32"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the mailbox. The default is to set the Red Container to the value of the mailbox.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerMailFill.jpg" width="227" height="86"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the maiboxl. A sound is played and the value of the Red Container is shown on the RCX. If the value of the mail was 2, the RCX would read 2.<!--#end_text2--><!--#end_mailcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_timervaluecontainer--><!--example=containerTimerFillex.vit=example--><!--#begin_picture1--><img src="images/timervaluecontainerc.jpg" width="192" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the timer. The default is to set the Red Container to the value of the red timer. You can use modifiers to determine what container you're using as well as what timer value you're using. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerTimerFillex.jpg" width="228" height="87"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the timer. A sound is played and the value of the Red Container is shown on the RCX. If the value of the sensor was 10, the RCX would read 10.<!--#end_text2--><!--#end_timervaluecontainer--></td> </tr> <tr> <td width="47%"><!--#begin_randomfillcontainer--><!--example=containerRandomFillex.vit=example--><!--#begin_picture1--><img src="images/randomfillcontainerc.jpg" width="245" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill the container with a random value between zero and a max random number (determined by a modifier). The default is to fill the Red Container with a random number between 0 and 8.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerRandomFillex.jpg" width="227" height="87"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with a random number from 0 to 8. A sound is played and the value of the Red Container is shown on the RCX. If the value of the sensor was 8, the RCX would read 8.<!--#end_text2--><!--#end_randomfillcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_clickscontainer--><!--example=containerClicksFillex.vit=example--><!--#begin_picture1--><img src="images/clickscontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the number of clicks of the touch sensor. The default is to set the Red Container to the number of clicks from the touch sensor on port 1. In your program, be sure to specify what port your touch sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerClicksFillex.jpg" width="226" height="90"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the number of clicks of the touch sensor. A sound is played and the value of the Red Container is shown on the RCX. If the number of clicks was 3, the RCX would read 3.<!--#end_text2--><!--#end_clickscontainer--></td> </tr> <tr> <td width="47%"><!--#begin_trcontainer--><!--example=containerTRFillex.vit=example--><!--#begin_picture1--><img src="images/trcontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the number of touch and releases of the touch sensor. The default is to set the Red Container to the number of touch and releases from the touch sensor on port 1. In your program, be sure to specify what port your touch sensor is connected to with a modifier.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerTRFillex.jpg" width="225" height="93"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the number of touch and releases of the touch sensor. A sound is played and the value of the Red Container is shown on the RCX. If the number of touch and releases was 3, the RCX would read 3.<!--#end_text2--><!--#end_trcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_pointscontainer--><!--example=containerDataex.vit=example--><!--#begin_picture1--><img src="images/pointscontainerc.jpg" width="213" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the number of data points collected in a data set. The default is to set the Red Container to the number of data points from the Red Data Set. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerDataex.jpg" width="252" height="91"><!--#end_picture2--><!--#begin_text2--> This piece of code initializes the touch sensor on Port 1 on the Red Data Set then begins taking data. It waits 10 seconds and then fills the Red Container with the number of points on the Red Data Set after that time. It then displays this number on the RCX and continues to wait until 35 data points are collected on the Red Data Set.<!--#end_text2--><!--#end_pointscontainer--></td> </tr> <tr> <td width="47%"><!--#begin_clockcontainer--><!--example=containerClockFillex.vit=example--><!--#begin_picture1--><img src="images/clockcontainerc.jpg" width="181" height="32"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the clock. The default is to set the Red Container to the value of the clock. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerClockFillex.jpg" width="224" height="85"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the clock. A sound is played and the value of the Red Container is shown on the RCX. If the value of the clock was 30 minutes(the amount of time the RCX was on), the RCX would read 30.<!--#end_text2--><!--#end_clockcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_formula--><!--example=containerFormulaex.vit=example--><!--#begin_picture1--><img src="images/formulac.jpg" width="261" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the result of a mathematical formula. The default is to set the Red Container to a value of one. In order to create a string (the area where the formula is written), you must right click on the lower right hand corner of the icon and click on create--&gt;constant. You can then type in your formula in the pink box.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerFormulaex.jpg" width="223" height="109"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the light sensor on port 1. It then divides the value of the Red Container by 10, adds 8 (4 times 2), and then puts the resulting value into the Red Container. This value is then displayed on the RCX. <!--#end_text2--><!--#end_formula--></td> </tr> <tr> <td width="47%"><!--#begin_eventstatecontainer--><!--example=eventstateconatinerex.vit=example--><!--#begin_picture1--><img src="images/eventstatecontainerc.jpg" width="181" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets the container to an event state. The event states are as follows: 0-low, 1-medium, 2-high, 3-undefined, 4-start calibrating, 5-calibrating in process.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/eventstatecontainerex.jpg" width="341" height="123"><!--#end_picture2--><!--#begin_text2--> This piece of code (where an event was configured earlier) takes the current event state, puts it in the Red Container and displays it on the RCX's LCD and then beeps. This process loops continuously until the event has been triggered. <!--#end_text2--><!--#end_eventstatecontainer--></td> </tr> <tr> <td width="47%"><!--#begin_successfuleventcontainer--><!--example=containerEventRegFillex.vit=example--><!--#begin_picture1--><img src="images/successfuleventcontainerc.jpg" width="181" height="32"><!--#end_picture1--><!--#begin_text1--> Hints: Set the container to a copy of the bit register of the successful event(s) of the current task. The default is to set the Red Container to the register. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerEventRegFillex.jpg" width="305" height="127"><!--#end_picture2--><!--#begin_text2--> This piece of code is a part of a larger program. The Event Register icon lets the user discover what event was triggered and react accordingly. <!--#end_text2--><!--#end_successfuleventcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_fillcamerasensorcontainer--><!--example=rcxstartloop.vit=example--><!--#begin_picture1--><img src="images/fillcamerasensorcontainerc.jpg" width="237" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets the container to the value of the camera sensor. The value of the camera sensor is defined by the user in Vision Center. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerCameraFillex.jpg" width="223" height="90"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value that is returned from the camera and displays it on the RCX. In order for this icon to work, you must be running Vision Center which can be found under the Project or Tools menu on the ROBOLAB toolbar.<!--#end_text2--><!--#end_fillcamerasensorcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_genericcontainer--><!--example=containerGenericFillex.vit=example--><!--#begin_picture1--><img src="images/genericcontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: This command sets the container to the value of the generic sensor adapter. The default is to set the value of the generic sensor adapter to the Red Container.<!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerGenericFillex.jpg" width="220" height="87"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the generic sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the generic sensor was 32, the RCX would read 32.<!--#end_text2--><!--#end_genericcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_humiditycontainersa--><!--example=containerHumidFillex.vit=example--><!--#begin_picture1--><img src="images/humiditycontainersac.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the humidity sensor. The default is to set the Red Container to the value of the humidity sensor on port 1. In your program, be sure to specify what port your humidity sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerHumidFillex.jpg" width="224" height="85"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the humidity sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the humidity sensor was 32, the RCX would read 32.<!--#end_text2--><!--#end_humiditycontainersa--></td> </tr> <tr> <td width="47%"><!--#begin_phcontainersa--><!--example=containerPHFillex.vit=example--><!--#begin_picture1--><img src="images/phcontainersac.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the pH sensor. The default is to set the Red Container to the value of the pH sensor on port 1. In your program, be sure to specify what port your pH sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerPHFillex.jpg" width="225" height="90"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the pH sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the pH sensor was 8, the RCX would read 8.<!--#end_text2--><!--#end_phcontainersa--></td> </tr> <tr> <td width="47%"><!--#begin_pressurecontainersa--><!--example=containerPressureFillex.vit=example--><!--#begin_picture1--><img src="images/pressurecontainersac.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the pressure sensor adapter. The default is to set the Red Container to the value of the pressure sensor adapter on port 1. In your program, be sure to specify what port your pressure sensor adapter is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerPressureFillex.jpg" width="224" height="88"><!--#end_picture2--><!--#begin_text2-->This piece of code fills the Red Container with the value of the pressure sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the pressure sensor was 4, the RCX would read 4.<!--#end_text2--><!--#end_pressurecontainersa--></td> </tr> <tr> <td width="47%"><!--#begin_soundlevelcontainersa--><!--example=containerSoundFillex.vit=example--><!--#begin_picture1--><img src="images/soundlevelcontainersac.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the sound level sensor. The default is to set the Red Container to the value of the sound level sensor on port 1. In your program, be sure to specify what port your sound level sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerSoundFillex.jpg" width="223" height="89"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the sound sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the sound sensor was 8, the RCX would read 8.<!--#end_text2--><!--#end_soundlevelcontainersa--></td> </tr> <tr> <td width="47%"><!--#begin_temperaturecontainersa--><!--example=containerProTempFillex.vit=example--><!--#begin_picture1--><img src="images/temperaturecontainersac.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the temperature sensor adapter. The default is to set the Red Container to the value of the temperature sensor adapter on port 1. In your program, be sure to specify what port your temperature sensor adapter is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerProTempFillex.jpg" width="225" height="84"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the ProTemp sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the ProTemp sensor was 8, the RCX would read 8.<!--#end_text2--><!--#end_temperaturecontainersa--></td> </tr> <tr> <td width="47%"><!--#begin_positioncontainersa--><!--example=containerPositionFillex.vit=example--><!--#begin_picture1--><img src="images/positioncontainersac.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the position sensor adapter. The default is to set the Red Container to the value of the position sensor adapter on port 1. In your program, be sure to specify what port your position sensor adapter is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerPositionFillex.jpg" width="220" height="86"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the position sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the position sensor was 8, the RCX would read 8.<!--#end_text2--><!--#end_positioncontainersa--></td> </tr> <tr> <td width="47%"><!--#begin_voltmetercontainer--><!--example=containerVoltageFillex.vit=example--><!--#begin_picture1--><img src="images/voltmetercontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the voltage sensor adapter. The default is to set the Red Container to the value of the voltage sensor adapter on port 1. In your program, be sure to specify what port your voltage sensor adapter is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerVoltageFillex.jpg" width="222" height="91"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the voltage sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the voltage sensor was 8, the RCX would read 8.<!--#end_text2--><!--#end_voltmetercontainer--></td> </tr> <tr> <td width="47%"><!--#begin_accelerometercontainer--><!--example=containerAccelFillex.vit=example--><!--#begin_picture1--><img src="images/accelerometercontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the acceleration sensor. The default is to set the Red Container to the value of the acceleration sensor on port 1. In your program, be sure to specify what port your acceleration sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerAccelFillex.jpg" width="225" height="86"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the accelerometer. A sound is played and the value of the Red Container is shown on the RCX. If the value of the accelerometer was 8, the RCX would read 8.<!--#end_text2--><!--#end_accelerometercontainer--></td> </tr> <tr> <td width="47%"><!--#begin_luxcontainer--><!--example=containerLuxFillex.vit=example--><!--#begin_picture1--><img src="images/luxcontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the Lux sensor. The default is to set the Red Container to the value of the Lux sensor on port 1. In your program, be sure to specify what port your Lux sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerLuxFillex.jpg" width="222" height="84"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the LUX sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the LUX sensor was 8, the RCX would read 8.<!--#end_text2--><!--#end_luxcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_barometercontainer--><!--example=containerBaromFillex.vit=example--><!--#begin_picture1--><img src="images/barometercontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the barometric sensor. The default is to set the Red Container to the value of the barometric sensor on port 1. In your program, be sure to specify what port your barometric sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerBaromFillex.jpg" width="222" height="85"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the barometer sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the barometer sensor was 8, the RCX would read 8.<!--#end_text2--><!--#end_barometercontainer--></td> </tr> <tr> <td width="47%"><!--#begin_redoxcontainer--><!--example=containerRedoxFillex.vit=example--><!--#begin_picture1--><img src="images/redoxcontainerc.jpg" width="186" height="52"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the Redox sensor. The default is to set the Red Container to the value of the redox sensor on port 1. In your program, be sure to specify what port your redox sensor is connected to with a modifier. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/containerRedoxFillex.jpg" width="222" height="85"><!--#end_picture2--><!--#begin_text2--> This piece of code fills the Red Container with the value of the Redox sensor. A sound is played and the value of the Red Container is shown on the RCX. If the value of the Redox sensor was 8, the RCX would read 8.<!--#end_text2--><!--#end_redoxcontainer--></td> </tr> <tr> <td width="47%"><!--#begin_fasttimervaluecontainer--><!--example=fasttimervaluecontainer.vit=example--><!--#begin_picture1--><img src="images/fasttimervaluecontainerc.jpg" width="188" height="50"><!--#end_picture1--><!--#begin_text1--> Hints: Use this command to fill a container with the value of the Timer (.01) reading time in hundredths of seconds.. <!--#end_text1--></td> <td width="53%"><!--#begin_picture2--><img src="images/fasttimervaluecontainer.jpg" width="319" height="96"><!--#end_picture2--><!--#begin_text2--> This piece of code zeros the red time beeps and then puts the value of the Timer (.01) reading in hundredths of seconds into the red conatiner. It then show the value of the red conatiner on the display for 2 seconds. (In Gernal it takes 100-110 hundreds of a second to play the beep). .<!--#end_text2--><!--#end_fasttimervaluecontainer--></td> </tr> </table> <p>&nbsp; </p> </body> </html>