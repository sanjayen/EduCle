                 ROBOLAB Examples--------------------------------------------------------This folder provides some additional example Inventor programs for use with ROBOLAB. You can access these examples in one of three ways:1.  If ROBOLAB is not running, or if you already have     an Inventor window open, then you can double click     on the icon of the file you want to open.2.  If you have an Inventor window open and select the     menu item File>Open, you can navigate to this     directory and open one of the example files.OR3.  Copy the Examples folder into the directory:\Program Vault\Inventor\contained in the ROBOLAB folder.  You will see the other theme folders in there too (My Programs, Amusement Park etc.).  Then you can open up the examples within the Main Menu of ROBOLAB.--------------------------------------------------------The following is a description of the 12 example program contained in this folder:Example1.1.vi   On - Wait For time - Off     This simple program will run the motor attached to port A for four seconds and then stop.  Note that only a stop for port " is necessary and not a stop for all ports ABC.Example1.2.vi   Multiple outputs and sounds     In this program you will be performing three different steps in sequential order.  First the motor on port " will run for two seconds, then the RCX will make a sound, the light on port B will run for four seconds and then turn off.  Note that sound does not need a port nor a duration.  This is controlled internally by the RCX (you will see later that the RCX can make various different sounds).Example1.3.vi   Multiple outputs and Wait for touch sensor     Here is a more complicated program using touch sensors.  The motor on port A will run until the touch  sensor on port 1 is pushed in.  At this point the motor will change direction AND the light in port B will turn on.  This light will stay on for four seconds then shut off. THE MOTOR WILL CONTINUE TO RUN in its designated direction UNTIL the TOUCH SENSOR is pushed in again.  THEN the motor will reverse direction again and run for two seconds and then stop.  Try it out!Example2.1.vi   Multiple outputs and Wait fors with modifiers     This simple program demonstrates some of the commands available in Inventor level 2.  Now it is possible to use MODIFIERS with the commands (modifiers are the icons "hanging" underneath the commands) and output ports.  Modifiers tell the command what to do.  This program will turn on a motor on port A at a speed of 2, wait for 3 seconds and turn it off.  then it will turn on a light attached to port C (at power level 1) and wait for 2 seconds.  Then it will make that light brighter (power level 4), wait for 3 seconds and turn it off.Example2.2.vi   Reverse direction     This program uses a new command to reverse motor direction (the double arrow icon).  A program like this could be used to turn a motor attached to a lowering device.  When the object hits the ground the TOUCH SENSOR "communicates" to the RCX that the motor should reverse direction for a bit and then lower again so the object is just above the floor.Example2.3.vi   Light sensor and Jump commands with modifiers     What if you need to continuously repeat a task?  The JUMP commands (red arrows) allows you to do this.  A program such as this would turn on a motor, perhaps attached to a rotating pad, only when the light level was high enough.  It would turn the pad until the light level returned to the original level or lower.  Then it would continue to monitor the light levels and make the appropriate adjustments.  This would continue forever (or at least until the batteries in the RCX run out!).Example3.1.vi   Light sensor fork and jump commands     This example will turn on a lamp connected to Port A if the light sensor connected to Port 1 reads a value that is brighter than 55 %.Example3.2.vi	Multi-tasking with jumps and forks     This program uses multi-tasking.  The top and bottom tasks will run simultaneously.  It uses two touch sensors on ports 1 and 3 to control two lamps on ports A and C.Example4.1.vi	Containers (Light meter)     Put a light sensor on port 1 and lamps on any of the output ports A, B or C.  This program will make the power level of the lamp depend on the light reading of the sensor.  Point the light at a bright source and the lamps will be bright,  turn out the lights and the lamps will be dim.Example4.2.vi	Timers and Containers (Event counter)     This program uses timers and containers.  It will count the number of times you push in the touch sensor on port 1 within a 5 second interval and then flash a lamp on port A for however many times you pushed it in.Example4.3.1.vi RCX Mail and Containers (Remote event counter)     This example requires 2 RCXs.  Download this program into the "sender" RCX and theprogram in the file Example 4.3.2 into the "receiver" RCX.     This program will count for 5 seconds.  During that five seconds it will counthow many times the touch sensor on port 1 is pressed in (it will beep a short "click" when you press the touch sensor).  Atfer 5 seconds it will make a buzzingsound and send a mail to the second RCX containing the value of the Red Container.(how many times you pressed the sensor).  The second RCX will then Beep how manytimes the touch sensor was pressed.Example4.3.2.vi      This example is part two of example 4.3.1.viExample4.4.vi	Advanced programming (A reaction-testing game)     A Fun Game!     This is a reaction tester!  Lets see how quick you are!     Put a touch sensor on port 1 and lamps on ports A and C. When you run this program, the 2 lamps will light up.  As soon as they light up, hit the touch sensor twice.  As fast as you can!  One light will go out each time you hit the sensor. After both lights go out, the RCX will then beep depending on how fast you hit the sensor:     A high pitched tone means you are fast.     A low pitched sound means you are slow.     If it buzzes, that means you are REALLY slow.     If it plays a sweeping tune, that means you are REALLY fast!Open up this window to see the whole program.  It's really big!  Have fun!